<?php
/*

		Stockbird program for timing your buy's and sell's
		Written by borre 2017
		Open Source - please free to use, share and contribute.

*/

$list 	= $argv[1];
$app		= 'app/';

//		require_once("".$app."functions.php");
		require_once("".$app."bird.ascii");
		print_r($bird);

# 	Presets

		ini_set('display_errors', 1);
		error_reporting(E_NOTICE);
		ini_alter('date.timezone','Europe/Helsinki');

#		List of companies to track
		require_once("list/$list");

		asort($companies);

# 	Create Printer and Collector
		echo "Collecting data ...\n\n";
		$printer = '';
		$collector = array();
		$countline = 0;

		foreach($companies as $company):

			#		Reset printer
					$printer = '';

			#		Getters
					$url = $company['wsjlink'];
					$simply_price = $company['simplyprice'];

			# 	Let's get the data

					$curl = curl_init();
					curl_setopt($curl, CURLOPT_URL, $url);
					curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
					curl_setopt($curl, CURLOPT_HEADER, false);

			# Mimic a browser

					curl_setopt($curl, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17');
			    curl_setopt($curl, CURLOPT_AUTOREFERER, true);
			    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
			    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);
			 //   curl_setopt($curl, CURLOPT_VERBOSE, 1);

			# Skip SSL-v erifications
					curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
					curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);

					$data = curl_exec($curl);

// print_r($data);
// die('x');


			# 	Clean up the white spaces from data for better matching

					$data = str_replace(" ", "", $data);

					#		Stock price
					preg_match_all('#quote_val[^>]*>(.*?)</span>#s', $data, $datamatch);
					$stock_price = $datamatch[1][0];

					#		Company name
					preg_match_all('#companyName[^>]*>(.*?)</span>#s', $data, $datamatch);
					$company_name = $datamatch[1][0];

					#		Stock move today
					preg_match_all('#quote_changePer[^>]*>(.*?)</span>#s', $data, $datamatch);
					$stock_move_today = floatval($datamatch[1][0]);

			#		Visualize

					$company_name .= str_repeat(' ', (25-strlen($company_name)));
					$printer .= "".$company_name." | ";
					$printer .= "".$stock_price." | ";
					$potential = round(($simply_price-$stock_price) / $stock_price * 100, 2);
					$potential_order = "".$potential."";

					# Simply Wall street price
					if ($stock_price > $simply_price) {
						$printer .= "".chr(27)."[1;30m$simply_price ($potential%)". chr(27) . "[0m"." | ";
					} else {
						$printer .= "".chr(27)."[1;37m$simply_price ($potential%)". chr(27) . "[0m"." | ";
					}

					# Move today
					if (strpos($stock_move_today, '-') !== false) {
						$printer .= "".chr(27)."[1;31m$stock_move_today%". chr(27) . "[0m"." | "; // stock going down
					} else {
						$printer .= "".chr(27)."[1;32m+$stock_move_today%". chr(27) . "[0m"." | "; // stock going up
					}

					# Printout
					$printer .= "".$url."";
					echo "".$printer."\n";

					# Create data array
					$collector[$potential_order] = array(
							"id" => "$countline",
							"potential" => "$potential_order",
							"data" => "$printer",
					);

					$countline = $countline+1;

			endforeach;

    	system('clear');
			krsort($collector);

			# Check the collector content and reorder it
				echo "Most potential now:\n\n";

					foreach($collector as $collected):

						print_r($collected['data']);
						echo "\n";

					endforeach;
					echo "\n";
