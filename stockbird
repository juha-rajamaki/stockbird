<?php
/*

		Stockbird program for timing your buy's and sell's
		Written by borre 2017
		Open Source - please free to use, share and contribute.

*/

$list 	= $argv[1];
$app		= 'app/';

		require_once("".$app."bird.ascii");
		print_r($bird);

# 	Presets

		ini_set('display_errors', 1);
		// error_reporting(E_NOTICE);
		error_reporting(E_ALL & ~E_NOTICE);
		ini_alter('date.timezone','Europe/Helsinki');

#		List of companies to track
		require_once("list/$list");

		asort($companies);

# 	Create Printer and Collector
		echo "Collecting data ... Hold on this might take a while. \n\n";
		$printer = '';
		$collector = array();
		$countline = 0;

		foreach($companies as $company):

		### 		Start crawling wall street journal

			#		Reset printer
					$printer = '';

			#		Getters
					$url = $company['wsjlink'];

			# 	Let's get the data

					$curl = curl_init();
					curl_setopt($curl, CURLOPT_URL, $url);
					curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
					curl_setopt($curl, CURLOPT_HEADER, false);

			# Mimic a browser because they are trying to block crawlers just like this

					curl_setopt($curl, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17');
			    curl_setopt($curl, CURLOPT_AUTOREFERER, true);
			    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
			    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);
					// curl_setopt($curl, CURLOPT_VERBOSE, 1);

			# Skip SSL-verification
					curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
					curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);

					$data = curl_exec($curl);

			# 	Clean up the white spaces from data for better matching

					$data = str_replace(" ", "", $data);

					#		Stock price
					preg_match_all('#quote_val[^>]*>(.*?)</span>#s', $data, $datamatch);
					$stock_price = round($datamatch[1][0], 2);
					// echo "".$stock_price."";

					#		Company name
					preg_match_all('#companyName[^>]*>(.*?)</span>#s', $data, $datamatch);
					$company_name = $datamatch[1][0];

					#		Stock move today
					preg_match_all('#quote_changePer[^>]*>(.*?)</span>#s', $data, $datamatch);
					$stock_move_today = floatval($datamatch[1][0]);

		### 		Start crawling Simply wall street

			#		Getters
							$wsjurl 				= $company['wsjlink'];
							$url 						= $company['simplylink'];

					# 	Let's get the data

							$curl = curl_init();
							curl_setopt($curl, CURLOPT_URL, $url);
							curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
							curl_setopt($curl, CURLOPT_HEADER, false);

					# Mimic a browser because they are trying to block crawlers just like this

							curl_setopt($curl, CURLOPT_USERAGENT,'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17');
					    curl_setopt($curl, CURLOPT_AUTOREFERER, true);
					    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
					    curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);
							// curl_setopt($curl, CURLOPT_VERBOSE, 1);

					# Skip SSL-verifications
							curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
							curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);

							$data = curl_exec($curl);

					# 	Clean up the white spaces from data for better matching

							$data = str_replace(" ", "", $data);

							#		Fair value
							preg_match_all('#fair[^>]*>(.*?)</#s', $data, $datamatch);
							$result = $datamatch[1][2];	// default

							if(strpos($datamatch[1][2], "(") !== false) {
									$result = $datamatch[1][2];
							}
							elseif(strpos($datamatch[1][3], "(") !== false) {
									$result = $datamatch[1][3];
							}
							elseif(strpos($datamatch[1][4], "(") !== false) {
									$result = $datamatch[1][4];
							}
							elseif(strpos($datamatch[1][5], "(") !== false) {
									$result = $datamatch[1][5];
							}
							elseif(strpos($datamatch[1][6], "(") !== false) {
									$result = $datamatch[1][6];
							}
							elseif(strpos($datamatch[1][7], "(") !== false) {
									$result = $datamatch[1][7];
							}
							else { // collecting or fetching fails
									$result = 0;
									print_r($datamatch[1]);
							}

//						print_r($result);

							# Let's clean the data
							$result = str_replace(")", "", $result);
							$result = str_replace("(", "", $result);
							$result = str_replace("$", "", $result);
							$result = str_replace("â‚¬", "", $result);

							$simply_price = $result;
							if ($simply_price == 0) {$simply_price = "---"; } // error in simply stock price
//							echo "$company_name: ".$simply_price."\n";

			#		Visualize

					$company_name .= str_repeat(' ', (25-strlen($company_name)));
					$printer .= "".$company_name." | ";
					$stock_price = round($stock_price, 2);

					if ($stock_price != 0) { $potential = round(($simply_price-$stock_price) / $stock_price * 100, 2);}
					else { $stock_price = "---"; $potential = "---"; } // error in wall street stock price

					$printer .= "".$stock_price." | ";
					$potential_order = "".$potential."";

					# Simply Wall street price
					if ($stock_price > $simply_price) {
						$printer .= "".chr(27)."[1;30m$simply_price ($potential%)". chr(27) . "[0m"." | ";
					} else {
						$printer .= "".chr(27)."[1;37m$simply_price ($potential%)". chr(27) . "[0m"." | ";
					}

					# Move today
					if (strpos($stock_move_today, '-') !== false) {
						$printer .= "".chr(27)."[1;31m$stock_move_today%". chr(27) . "[0m"." | "; // stock going down
					} else {
						$printer .= "".chr(27)."[1;32m+$stock_move_today%". chr(27) . "[0m"." | "; // stock going up
					}

					$yourindex = $stock_move_today + $yourindex;

					# Printout
					$printer .= "".$wsjurl."";
					echo "".$printer."\n";

					# Create data array
					$collector[$potential_order] = array(
							"id" => "$countline",
							"potential" => "$potential_order",
							"data" => "$printer",
					);

					$countline = $countline+1;

			endforeach;

    	system('clear');
			krsort($collector);

			# Check the collector content and reorder it
				echo "Most potential now:\n\n";

					foreach($collector as $collected):

						print_r($collected['data']);
						echo "\n";

					endforeach;

					echo "\n";
					$yourperformance = round($yourindex/$countline, 2);

					// BULLish market
					if ($yourperformance > 2 && $yourperformance <= 5) { echo "".chr(27)."[1;32mStocks are going up.". chr(27) . "[0m"." | ";}
					if ($yourperformance > 5 && $yourperformance <= 10) { echo "".chr(27)."[1;32mThere might be some opporunities on the market.". chr(27) . "[0m"." | ";}
					if ($yourperformance > 10) { echo "".chr(27)."[1;32mPeople got greedy. Hope you invested yesterday!". chr(27) . "[0m"." | ";}

					// Business as usual
					if ($yourperformance >= -2 && $yourperformance <= 2) { echo "".chr(27)."[1;34mBusiness as usual". chr(27) . "[0m"." | ";}

					// BEARish market
					if ($yourperformance < -2 && $yourperformance >= -5) { echo "".chr(27)."[1;31mStocks are going down.". chr(27) . "[0m"." | ";}
					if ($yourperformance < -5 && $yourperformance >= -10) { echo "".chr(27)."[1;31mThere is FEAR on the street and market going down.". chr(27) . "[0m"." | ";}
					if ($yourperformance < -10) { echo "".chr(27)."[1;31mThere is PANIC and major SELL-OFF on the market". chr(27) . "[0m"." | ";}

					echo "Performance of your list: $yourperformance%";

					echo "\n\n";
